<VirtualHost *:80>
ServerName carbonio.mit.edu
ServerAdmin webmaster@localhost

# Force all HTTP traffic to HTTPS for security
RewriteEngine On
RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]

</VirtualHost>

<VirtualHost *:443>
DocumentRoot /var/www/html

# --- WSGI Configuration ---

# 1. Define the Daemon Process Group
# The environment-variables option has been REMOVED because your Apache/WSGI installation
# was rejecting it, causing the syntax error. The Python script now reads credentials
# from config.cfg instead.
WSGIDaemonProcess labmonitordb-process user=www-data group=www-data threads=5

# 2. Tell the WSGI Script to use this defined process group
WSGIProcessGroup labmonitordb-process

# 3. Alias the URL path to the WSGI script.
WSGIScriptAlias /LabMonitorDB/api /var/www/LabMonitorDB/data_collector.wsgi

# --- CORS Headers (Now handled by Flask) ---
# This entire section remains commented out because CORS is now configured and handled
# by Flask inside data_collector.wsgi, which is the most reliable approach.
#<IfModule mod_headers.c>
#SetEnvIf Origin "^(http://192\.168\.1\.203|https://carbonio\.mit\.edu)$" CORS_ORIGIN=$0
#Header always set Access-Control-Allow-Origin "%{CORS_ORIGIN}e" env=CORS_ORIGIN
#Header always merge Access-Control-Allow-Methods "POST, OPTIONS"
#Header always merge Access-Control-Allow-Headers "Content-Type"
#Header always merge Access-Control-Max-Age "86400"
#</IfModule>


<Location /LabMonitorDB/api>
<IfModule mod_headers.c>
Header always unset Content-Length
</IfModule>
</Location>

# --- Directory access permissions for the WSGI script ---
<Directory /var/www/LabMonitorDB>
WSGIProcessGroup labmonitordb-process
WSGIApplicationGroup %{GLOBAL}
Require all granted

<LimitExcept POST OPTIONS>
    Require all denied
</LimitExcept>
</Directory>

# --- Error Logging ---
ErrorLog ${APACHE_LOG_DIR}/data_collector_error.log
CustomLog ${APACHE_LOG_DIR}/data_collector_access.log combined

# --- SSL/TLS Configuration ---
SSLEngine on
SSLCertificateFile /etc/letsencrypt/live/carbonio.mit.edu/cert.pem
SSLCertificateKeyFile /etc/letsencrypt/live/carbonio.mit.edu/privkey.pem

</VirtualHost>
